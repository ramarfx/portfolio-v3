/* eslint-disable react/jsx-no-undef */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: OPREXT (https://sketchfab.com/OPREXT)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/uranus-eaacd06bee7c4268b99b85e3e523e4ab
Title: Uranus
*/

import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { useEffect, useState } from 'react'

export function SaturnModel({ isHover, setIsHover }, ...props) {
    const { nodes, materials } = useGLTF('/model/uranus.glb')
    const [ringRotation, setRingRotation] = useState(0)
    const [isMobile, setIsMobile] = useState(false)

    useFrame(() => {
        setRingRotation(ringRotation + 0.025 + (isHover ? 0.05 : 0));
    })

    const handleMouseEnter = () => {
        setIsHover(true)
    }

    const handleMouseLeave = () => {
        setIsHover(false)
    }

    useEffect(() => {
        const handleResize = () => {
            window.innerWidth < 768 ? setIsMobile(true) : setIsMobile(false)
        }

        handleResize()

        window.addEventListener('resize', handleResize)

        return () => {
            window.removeEventListener('resize', handleResize);
        };
    }, [])

    useEffect(() => {
        console.log("mobile:", isMobile);

    }, [isMobile])

    return (
        <group {...props}>
            <group
                dispose={null}
                position={[0, 0.48, 0]}
                scale={isMobile ? 0.05 : 0.065 + (isHover ? 0.001 : 0)}
                rotation={[0.26, -3.31, -0.41000000000000003]}
                onPointerEnter={handleMouseEnter}
                onPointerLeave={handleMouseLeave}
            >
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_4.geometry}
                    material={materials.material_0}
                    position={[0, 0, 0]}
                    rotation={[0, ringRotation * -1, 0]}
                    scale={63.934}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_6.geometry}
                    material={materials.material_1}
                    position={[0, 0, 0]}
                    rotation={[0, ringRotation, 0]}
                    scale={114.808}
                />
            </group>
        </group>
    )
}

useGLTF.preload('/model/uranus.glb')
